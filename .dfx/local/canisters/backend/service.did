type UserUpdate = 
 record {
   profilePicture: opt blob;
   role: opt text;
 };
type User = 
 record {
   profilePicture: opt blob;
   role: text;
 };
type PatientUpdate = 
 record {
   allergies: opt vec text;
   bloodPressure: opt text;
   bloodType: opt text;
   chronicConditions: opt vec text;
   currentMedications: opt vec text;
   dateOfBirth: opt text;
   heartRate: opt text;
   height: opt text;
   name: opt text;
   notes: opt text;
   status: opt text;
   temperature: opt text;
   updatedAt: opt int;
   weight: opt text;
 };
type Patient = 
 record {
   allergies: vec text;
   bloodPressure: text;
   bloodType: text;
   chronicConditions: vec text;
   currentMedications: vec text;
   dateOfBirth: text;
   heartRate: text;
   height: text;
   name: text;
   notes: text;
   status: text;
   temperature: text;
   updatedAt: int;
   weight: text;
 };
type DoctorUpdate = 
 record {
   address: opt text;
   description: opt text;
   email: opt text;
   hospitalAffiliation: opt text;
   licenseNumber: opt text;
   name: opt text;
   phone: opt text;
   specialization: opt text;
 };
type Doctor = 
 record {
   address: text;
   description: text;
   email: text;
   hospitalAffiliation: text;
   licenseNumber: text;
   name: text;
   phone: text;
   specialization: text;
 };
type Appointment = 
 record {
   appointmentDate: text;
   appointmentId: text;
   appointmentReason: text;
   appointmentStatus: text;
   doctorId: principal;
   patientId: principal;
 };
service : {
  addAppointment: (principal, principal, text, text) -> (opt Appointment);
  addUser: (text) -> (opt User);
  checkFileExists: (text) -> (bool);
  getAllAppointments: () ->
   (vec record {
          text;
          Appointment;
          opt Doctor;
          opt Patient;
        });
  getAllDoctors: () -> (vec record {
                              principal;
                              Doctor;
                              User;
                            });
  getDoctorProfile: () -> (opt Doctor);
  getMyProfile: () -> (opt User);
  getPatient: (principal) -> (opt Patient);
  getPatientProfile: () -> (opt Patient);
  getUpcomingAppointments: () ->
   (vec record {
          text;
          Appointment;
          Patient;
          Doctor;
        });
  getUserDoctorData: () -> (opt Doctor);
  markAppointmentAsCancelled: (text) -> (bool);
  markAppointmentAsComplete: (text) -> (bool);
  updateDoctorData: (DoctorUpdate) -> (opt Doctor);
  updatePatientField: (PatientUpdate, opt principal) -> (opt Patient);
  updateUserField: (UserUpdate) -> (opt User);
  uploadFileChunk: (text, blob, nat, text, text) -> ();
}
